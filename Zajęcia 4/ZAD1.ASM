MEM1	EQU	100
MEM2	EQU	110
MEM12	EQU	104

	LJMP	START
	ORG	100H
START:

	LCALL	LCD_CLR
	MOV R0, #MEM1 ; ZAPISUJEMY DO RÓ¯NYCH OBSZRÓW PAMIÊCI LICZBY W FORMACIE BCD
	LCALL GET_NUM
	LCALL BCD_HEX

	MOV R0, #MEM2
	LCALL GET_NUM
	LCALL BCD_HEX

	MOV R1, #MEM1
	MOV A, @R1
	INC R1
	MOV B, @R1

	LCALL MUL_2_2

	INC R0
	INC R0
	INC R0

	MOV A, @R0
	LCALL WRITE_HEX
	DEC R0
	MOV A, @R0
	LCALL WRITE_HEX
	DEC R0
	MOV A, @R0
	LCALL WRITE_HEX
	DEC R0
	MOV A, @R0
	LCALL WRITE_HEX


	MOV B, #27H
	MOV A, #10H

	LCALL DIV_4_2

	LCALL HEX_BCD

	MOV R0, #MEM12
	LCALL WRITE_HEX
	LCALL HEX_BCD

	MOV R0, #MEM1+1
	MOV A, @R0
	LCALL WRITE_HEX
	DEC R0
	MOV A, @R0
	LCALL WRITE_HEX
	MOV R0, #MEM12+1
	MOV A, @R0
	LCALL WRITE_HEX
	DEC R0
	MOV A, @R0
	LCALL WRITE_HEX

STOP:

	SJMP	STOP